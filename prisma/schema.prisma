generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialActions"] // You won't need this in Prisma 3.X or higher.
  }
  
  datasource db {
    provider          = "postgresql"
    url       = env("WRITER_DATABASE_URL")
    directUrl = env("DIRECT_URL")
  }
  
  // resetç”¨
  model Reset {
    id        Int     @id @default(autoincrement())
  }

  model User {
    id                  String    @id @default(dbgenerated("uuid_generate_v4()"))
    name                String?
    email               String?   @unique
    emailVerified       DateTime?
    password            String
    image               String?
    rooms               UsersOnRooms[]
  }

  model Room {
    id                  String    @id @default(dbgenerated("uuid_generate_v4()"))
    player1             String
    player2             String?
    turn_count          Int
    next_turn           String?
    player1_kifu        Int[]
    player2_kifu        Int[]
    kifu1_90            Int[]
    kifu1_70            Int[]
    kifu2_90            Int[]
    kifu2_70            Int[]
    pre_player1_kifu    Int[]
    pre_player2_kifu    Int[]
    pre_kifu1_90        Int[]
    pre_kifu1_70        Int[]
    pre_kifu2_90        Int[]
    pre_kifu2_70        Int[]
    winner              String?
    createdAt           DateTime @default(now()) @db.Timestamptz
    users               UsersOnRooms[]
  }

  model UsersOnRooms {
    user User @relation(fields: [userid], references: [id])
    userid String
    room Room @relation(fields: [roomid], references: [id])
    roomid String
    createdAt           DateTime @default(now()) @db.Timestamptz

    @@id([userid, roomid])
  }